#spring项目名
spring.application.name=dubbo_auto_configuration_provider_demo
server.port=8080

spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/world?useUnicode=true&characterEncoding=utf-8&useSSL=true&serverTimezone=UTC
spring.datasource.password=123456
spring.datasource.username=root
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource

# Job 存储器类型。默认为 memory 表示内存，可选 jdbc 使用数据库。
spring.quartz.job-store-type=jdbc
## 是否自动使用 SQL 初始化 Quartz 表结构。这里设置成 never ，我们手动创建表结构。
spring.quartz.jdbc.initialize-schema=never

spring.datasource.q



mybatis.mapper-locations= classpath*:mapper/*Mapper.xml
mybatis.type-aliases-package=com.lilin.dubboserviceprovider.mybatis.entity

#地址
redis.address=127.0.0.1
#端口
redis.port=6379
#连接redis密码
redis.password=123456
#最大连接数
redis.maxActive=100
#控制一个pool最多有多少个状态为idle(空闲的)的jedis实例，默认值也是8。
redis.maxIdle=20
#等待可用连接的最大时间，单位毫秒，默认值为-1，表示永不超时。如果超过等待时间，则直接抛出JedisConnectionException
redis.maxWait=10000
#连接超时的时间
redis.timeout=10000
#数据库模式是16个数据库 0~15
redis.defaultDatabase=0
#控制redis是否池化
EnableRedisPooled=true
#设置session保存为默认redis的方式
spring.session.store-type=redis




#Dubbo provider configuration
dubbo.application.name=dubbo_provider
dubbo.registry.protocol=zookeeper
dubbo.registry.address=zookeeper://127.0.0.1:2181
dubbo.protocol.name=dubbo
dubbo.protocol.port=20880
#扫描注解包通过该设置将服务注册到zookeeper
dubbo.scan.base-packages=com.lilin.dubboserviceprovider