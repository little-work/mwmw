// file content from http://wiki.iflytek.com/pages/viewpage.action?pageId=234785998

// protobuf 3
 
syntax = "proto3";
 
package iat;
option java_multiple_files = true;  //是不是生成多个文件，要不然工具生成都在一个类之中
option java_package = "com.iflytek.iat.sdk.core";
option java_outer_classname = "IatProto";
 

//请求参数
message IatRequest {
  map<string,string>  sessionParam=1;   // 创建会话参数，只要求传一次，后续持续向服务端写音频时可以忽略（服务也不再解析）,详细说明见：sessionParam参数说明
  bytes               samples=2;        // 音频数据
  string              samplesInfo=3;    // 音频数据信息，扩展参数，保留
  bool                endFlag=4;        // 音频结束标记
 
 
// sessionParam可设置的参数如下：  
//      Key                   value                                         description
//      sid                   string                                        会话id，这个参数一定要传，方便以后检索日志
//      aue                   raw(pcm音频),speex,  speex-wb， opus           音频编码格式，未传入默认speex-web
//      rst                   json,plain                                    返回结果的格式，未传入默认json
//      rse                   utf8,gbk                                      转写结果的编码，未传入默认utf8
//      eos                   [0~600000]                                    引擎参数，vad后断点值, 整数，毫秒，取值范围[0-60000]
//      dwa                   wpgs                                          引擎参数，是否获取中间结果
//      wbest                 [0~5]                                         引擎参数，多候选（句子级）
//      wbestonlyper          true,false                                    引擎参数，是否只有人名多候选
//      rate                  8k,16k                                        采样率，如果传入的不是16k，则按照16k重采样
//      hotword               word1;word2;...                               采用;分割的热词，为utf-8编码


}
 

//识别结果
message IatResult {
  string      errStr=1;        // 错误描述
  int32       errCode=2;       // 错误码
  string      ansStr=3;        // 结果
  bool        endFlag=4;       // 识别结束标记


//返回结果格式说明
//json:
//{
//  "sn": 1,      // 音频段信息，从1开始
//  "bg": 0,      // 开始，为0
//  "ed": 0,      // 结束，为0
//  "ls": true,   // 是否为最后结果
//  "pgs"         // apd和rpl，apd第一次pgs结果，rpl多次pgs结果
//  "rg"          // rpl时会有, psg的段信息，如[1,1]
// 
//  "ws": [{
//      "bg": 0,
//      "cw": [{
//          "sc": 0.0,
//          "w": "想"
//      }],
//      "ed": 0
//  }]
//}
// plain:
// 拼接引擎结果中的词，如"想多了也没有什么用。"

}
 
 

 
 
service Iat {

  // 采用流的方式持续向服务端写音频数据，及持续从服务端获得结果
  // 音频请求流,IatRequest.endFlag为true时代表写音频结束
  // 结果返回流,IatResult.endFlang为true时代表会话识别结束
  rpc createRec(stream IatRequest) returns (stream IatResult) { }
}